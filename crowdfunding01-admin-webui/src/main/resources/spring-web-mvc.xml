<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			    http://www.springframework.org/schema/beans/spring-beans.xsd
			    http://www.springframework.org/schema/context
			    http://www.springframework.org/schema/context/spring-context.xsd
			    http://www.springframework.org/schema/mvc
			    http://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!--    配置web容器-->

<!--    扫描springmvc中相关容器-->
    <context:component-scan base-package="com.yama.crowd.mvc" />

<!--    配置视图解析器-->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/" />
        <property name="suffix" value=".jsp" />
    </bean>

<!--    配置mvc注解驱动，并自动配置映射器，-->
    <mvc:annotation-driven />

    <!--对于异常，
    访问mvc:controller产生的异常由xml配置异常处理
    访问controller路径产生的异常由注解配置的异常处理器处理，没有相应的处理器使用xml配置
    两者皆无交给tomcat处理。-->


<!--    配置基于xml的异常映射,用来处理mvc：view-controller异常，也可以处理注解异常-->
    <bean id="simpleMappingExceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
<!--        配置异常类型和逻辑视图名称的对应关系-->
        <property name="exceptionMappings">
            <props>
                <!--key属性指定异常全类名，标签体中指示对应视图-->
                <!--对于标签体中的视图名称前后缀，通过视图解析器中的前后缀内容指定-->
                <prop key="java.lang.NullPointerException">exception/system-err</prop>
                <prop key="com.yama.crowd.exceptions.AccessForbiddenException">page/admin-login</prop>
            </props>
        </property>
    </bean>

<!--    配置拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/admin/to/login/index.html"/>
            <mvc:exclude-mapping path="/admin/do/login.html"/>
            <bean id="loginInterceptor" class="com.yama.crowd.mvc.interceptor.LoginInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>
    
    
    <mvc:view-controller path="/admin/to/login/index.html" view-name="page/admin-login"/>

    <mvc:view-controller path="/admin/to/main.html" view-name="page/admin-main"/>

    <!--新增页面-->
    <mvc:view-controller path="/admin/to/add/page.html" view-name="page/admin-add" />

    <!--  1、直接定位到页面，数据通过ajax请求进行获取
          2、另一种获取数据的方式，就是通过controller进行获取数据，
          将数据放到model中，在jsp中通过el表达式进行获取数据
      -->
    <mvc:view-controller path="/role/to/page.html" view-name="page/role-page"/>

    <mvc:view-controller path="/menu/to/page.html" view-name="page/menu-page"/>

    <!--
    相当于
    @RequestMapping("/admin/to/login/index.html")
    public String admin(){
        return "admin-login";
    }
     -->

    <!--   配置自定义异常控制器-->
<!--    <bean id="sysExceptionResolver" class="com.yama.crowd.mvc.resolver.SysExceptionResolvers"></bean>-->
</beans>